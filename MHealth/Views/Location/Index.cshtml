
@{
    ViewData["Title"] = "Map";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h5 class="mt-3">@ViewData["Title"]</h5>
@if (Model != null)
{
    <p>@Model.Latitude, @Model.Longitude</p>
}

<div class="row mt-3">
    <div class="col-md-12">
        <div class="form-group">
        </div>
    </div>
</div>

@*<div class="form-group">
    <label asp-for="Address">Address</label>
    <input type="text" class="form-control" asp-for="Address" placeholder="Search">
    <span asp-validation-for="Address" class="text-danger"></span>
</div>*@



<div class="row mt-3">
    <div class="col-md-12">
        <input id="txtsearch" class="form-control" type="text" placeholder="Enter Search Place">

        <div id="map" style="height:400px;"></div>
        <div id="directions-panel"></div>
    </div>
</div>
<script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
@*<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCZP8zlrrkzeJfpo9RKOL6NoNMghN_wRQQ&callback=initMap"></script>*@
<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCZP8zlrrkzeJfpo9RKOL6NoNMghN_wRQQ&callback=initMap&libraries=places&v=weekly"></script>


<script>
    
    function initMap() {
        var userLocation;
        const map = new google.maps.Map(document.getElementById("map"), {
            center: { lat: -33.8688, lng: 151.2195 },
            zoom: 13,
            mapTypeId: "roadmap",
        });

        const input = document.getElementById("txtsearch");
        const searchBox = new google.maps.places.SearchBox(input);

        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

        map.addListener("bounds_changed", () => {
            searchBox.setBounds(map.getBounds());
        });

        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {
                var latitude = position.coords.latitude;
                var longitude = position.coords.longitude;
                userLocation = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude,
                };
                var marker = new google.maps.Marker({
                    position: { lat: latitude, lng: longitude },
                    map: map,
                    title: 'Current Location'
                });
                map.setCenter({ lat: latitude, lng: longitude });
            }, function () {
                alert('Error getting location');
            });
        } else {
            alert('Geolocation is not supported by your browser.');
        }

        let markers = [];

        searchBox.addListener("places_changed", () => {
            const places = searchBox.getPlaces();

            if (places.length == 0) {
                return;
            }

            markers.forEach((marker) => {
                marker.setMap(null);
            });
            markers = [];

            const bounds = new google.maps.LatLngBounds();

            places.forEach((place) => {
                if (!place.geometry || !place.geometry.location) {
                    console.log("Returned place contains no geometry");
                    return;
                }

                const icon = {
                    url: place.icon,
                    size: new google.maps.Size(71, 71),
                    origin: new google.maps.Point(0, 0),
                    anchor: new google.maps.Point(17, 34),
                    scaledSize: new google.maps.Size(25, 25),
                };

                markers.push(
                    new google.maps.Marker({
                        map,
                        icon,
                        title: place.name,
                        position: place.geometry.location,
                    }),
                );
                if (place.geometry.viewport) {
                    bounds.union(place.geometry.viewport);
                } else {
                    bounds.extend(place.geometry.location);
                }
            });
            map.fitBounds(bounds);

            // Calculate and display directions to the selected place
            calculateAndDisplayRoute(map, userLocation, places[0].geometry.location);
        });
    }

    function calculateAndDisplayRoute(map, userLocation, destination) {
        const directionsService = new google.maps.DirectionsService();
        const directionsDisplay = new google.maps.DirectionsRenderer({
            map: map,
            panel: document.getElementById('directions-panel'),
        });

        const request = {
            origin: userLocation,
            destination: destination,
            travelMode: 'DRIVING',
        };

        directionsService.route(request, function (result, status) {
            if (status === 'OK') {
                directionsDisplay.setDirections(result);
            } else {
                alert('Directions request failed due to ' + status);
            }
        });
    }

    window.initMap = initMap;
</script>